# Note: though this configuration is technically written in YAML, only the simplified
# templated structure below is expected (i.e. parsing is not fully-YAML-complient)

# Epoch format (for timestamps/time_created) must be either: 
#   UNIX (i.e. seconds since 1970-01-01T00:00:00Z) or
#   FIT  (i.e. seconds since 1989-12-31T00:00:00Z, see Global
#         Profile in https://developer.garmin.com/fit/protocol/)
epoch_format: UNIX 

# Source file meta data columns: file type (one of FIT: TCX)
# filename, and full-path-uri (as best as ascertainable)
source_filetype: false
source_filename: true
source_file_uri: false

# FIT enumeration columns: containing numeric indexes and/or enumerated string names. Including
# (at least) name or index for each category (manufacturer, product, mesg, and field) is suggested.
# Fields which are not validly defined in FIT mesgs will be left NULL/None in parquet file.
manufacturer_index: false
manufacturer_name: true
product_index: true
product_name: false
timestamp: true
mesg_index: false
mesg_name: true
field_index: true
field_name: true
field_type: true
units: true

# Field value columns: best attempt is made to respect original FIT data type (w/some caveats, see 
# FIT field application of scale/offset in https://developer.garmin.com/fit/protocol/). Note that
# if set, the value_string column will be assigned data translations of both numeric/string fields.
# Note: if opening parquet file with pandas, an integer column (w/nulls) will be converted to float,
# see: https://stackoverflow.com/questions/53327973/pandas-converting-null-int64-to-float64
value_string: true
value_integer: false
value_float: true

# Row exclusion options: rows with null/empty field values, rows with timestamp
# field name (timestamp is broken-out into its own column by default for mesg rows)
exclude_empty_values: true
exclude_timestamp_values: false
